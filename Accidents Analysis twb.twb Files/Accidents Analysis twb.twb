<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0415.1018                               -->
<workbook original-version='18.1' source-build='2025.1.1 (20251.25.0415.1018)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <Extensions />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VizExtensions.true...VizExtensions />
    <_.fcp.VizExtensionsDupEncodingUUID.true...VizExtensionsDupEncodingUUID />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Output Extract' inline='true' name='federated.0whpcjx0myjclq1bfimjg059lfxa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Output' name='hyper.0s1udl710zcw121e1tyjk08rihcd'>
            <connection authentication='auth-none' author-locale='en_GB' class='hyper' dbname='C:/Users/30694/Desktop/Accidents Analysis twb.twb Files/Data/Datasources/Output.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.0s1udl710zcw121e1tyjk08rihcd' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DateTime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DateTime]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>DateTime</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>24192</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is Duplicate Row?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Is Duplicate Row?]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Is Duplicate Row?</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentUID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AccidentUID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentUID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>66051</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AccidentType]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentType_en</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AccidentType_en]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentType_en</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>11</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentSeverityCategory_en</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AccidentSeverityCategory_en]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentSeverityCategory_en</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentInvolvingPedestrian</remote-name>
            <remote-type>11</remote-type>
            <local-name>[AccidentInvolvingPedestrian]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentInvolvingPedestrian</remote-alias>
            <ordinal>6</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentInvolvingBicycle</remote-name>
            <remote-type>11</remote-type>
            <local-name>[AccidentInvolvingBicycle]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentInvolvingBicycle</remote-alias>
            <ordinal>7</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentInvolvingMotorcycle</remote-name>
            <remote-type>11</remote-type>
            <local-name>[AccidentInvolvingMotorcycle]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentInvolvingMotorcycle</remote-alias>
            <ordinal>8</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <approx-count>2</approx-count>
            <contains-null>true</contains-null>
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoadType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoadType]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>RoadType</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RoadType_en</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RoadType_en]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>RoadType_en</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#AccidentYear</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#AccidentYear]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>#AccidentYear</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>14</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#AccidentMonth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#AccidentMonth]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>#AccidentMonth</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>12</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentWeekDay_en</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AccidentWeekDay_en]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentWeekDay_en</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#AccidentWeekDay_en – 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#AccidentWeekDay_en – 1]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>#AccidentWeekDay_en – 1</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>7</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#AccidentHour</remote-name>
            <remote-type>129</remote-type>
            <local-name>[#AccidentHour]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>#AccidentHour</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>24</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LROOT' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AccidentHour_text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AccidentHour_text]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>AccidentHour_text</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>24</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='#AccidentWeekDay en – 1' datatype='string' name='[#AccidentWeekDay_en – 1]' role='dimension' type='nominal' />
      <column caption='AccidentHour text (copy)' datatype='string' name='[AccidentHour text (copy)_433752950137327619]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[AccidentHour_text]' />
      </column>
      <column caption='AccidentHour text' datatype='string' name='[AccidentHour_text]' role='dimension' type='nominal' />
      <column caption='Accident Involving Bicycle' datatype='boolean' name='[AccidentInvolvingBicycle]' role='dimension' type='nominal' />
      <column caption='Accident Involving Motorcycle' datatype='boolean' name='[AccidentInvolvingMotorcycle]' role='dimension' type='nominal' />
      <column caption='Accident Involving Pedestrian' datatype='boolean' name='[AccidentInvolvingPedestrian]' role='dimension' type='nominal' />
      <column caption='AccidentSeverityCategory en' datatype='string' name='[AccidentSeverityCategory_en]' role='dimension' type='nominal' />
      <column caption='Accident Type' datatype='string' name='[AccidentType]' role='dimension' type='nominal' />
      <column caption='AccidentType en' datatype='string' name='[AccidentType_en]' role='dimension' type='nominal' />
      <column caption='Accident UID' datatype='string' name='[AccidentUID]' role='dimension' type='nominal' />
      <column caption='AccidentWeekDay en' datatype='string' name='[AccidentWeekDay_en]' role='dimension' type='nominal' />
      <column caption='Angle' datatype='real' name='[Calculation_433752950137769988]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(INT([AccidentHour text (copy)_433752950137327619]) - 1) * (2 * PI() / 24)' />
      </column>
      <column caption='Calculation1' datatype='integer' name='[Calculation_433752950141480968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
      </column>
      <column caption='Values' datatype='integer' name='[Calculation_433752950141566985]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
      </column>
      <column caption='X' datatype='real' name='[Calculation_433752950143270923]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
      </column>
      <column caption='Y' datatype='real' name='[Calculation_433752950143893516]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
      </column>
      <column caption='X1' datatype='real' name='[Calculation_433752950145294349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
      </column>
      <column caption='Y2' datatype='real' name='[Calculation_433752950146232334]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
      </column>
      <column caption='Date Time' datatype='datetime' name='[DateTime]' role='dimension' type='ordinal' />
      <column caption='Road Type' datatype='string' name='[RoadType]' role='dimension' type='nominal' />
      <column caption='RoadType en' datatype='string' name='[RoadType_en]' role='dimension' type='nominal' />
      <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' role='measure' type='quantitative' />
      <column-instance column='[AccidentType]' derivation='Attribute' name='[attr:AccidentType:nk]' pivot='key' type='nominal' />
      <column-instance column='[AccidentType]' derivation='None' name='[none:AccidentType:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AccidentType:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;at8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;at0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;at4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;at9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;at5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;at1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;at6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;at00&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;at7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;at2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;at3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:AccidentType:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;at8&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;at0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;at4&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;at9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;at5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;at1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;at6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;at00&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;at7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;at2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;at3&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='DateTime' />
        <field-sort-custom-order field='Is Duplicate Row?' />
        <field-sort-custom-order field='AccidentUID' />
        <field-sort-custom-order field='AccidentType' />
        <field-sort-custom-order field='AccidentType_en' />
        <field-sort-custom-order field='AccidentSeverityCategory_en' />
        <field-sort-custom-order field='AccidentInvolvingPedestrian' />
        <field-sort-custom-order field='AccidentInvolvingBicycle' />
        <field-sort-custom-order field='AccidentInvolvingMotorcycle' />
        <field-sort-custom-order field='RoadType' />
        <field-sort-custom-order field='RoadType_en' />
        <field-sort-custom-order field='#AccidentYear' />
        <field-sort-custom-order field='#AccidentMonth' />
        <field-sort-custom-order field='AccidentWeekDay_en' />
        <field-sort-custom-order field='#AccidentWeekDay_en – 1' />
        <field-sort-custom-order field='#AccidentHour' />
        <field-sort-custom-order field='AccidentHour_text' />
        <field-sort-custom-order field='AccidentHour text (copy)_433752950137327619' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_433752950137769988' />
        <field-sort-custom-order field='Calculation_433752950139949063' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119'>
            <properties context=''>
              <relation connection='hyper.0s1udl710zcw121e1tyjk08rihcd' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_68D100DB993E4A529F83A0D939C7FE2C]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='TS Sankey' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Accident Type' />
        <param name='target' value='TS Sankey' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='HeatMap/hh/yy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output Extract' name='federated.0whpcjx0myjclq1bfimjg059lfxa' />
          </datasources>
          <datasource-dependencies datasource='federated.0whpcjx0myjclq1bfimjg059lfxa'>
            <column datatype='string' name='[#AccidentHour]' role='dimension' type='nominal' />
            <column datatype='string' name='[#AccidentYear]' role='dimension' type='nominal' />
            <column caption='AccidentHour text (copy)' datatype='string' name='[AccidentHour text (copy)_433752950137327619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[AccidentHour_text]' />
            </column>
            <column caption='AccidentHour text' datatype='string' name='[AccidentHour_text]' role='dimension' type='nominal' />
            <column caption='Angle' datatype='real' name='[Calculation_433752950137769988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(INT([AccidentHour text (copy)_433752950137327619]) - 1) * (2 * PI() / 24)' />
            </column>
            <column caption='Calculation1' datatype='integer' name='[Calculation_433752950141480968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Values' datatype='integer' name='[Calculation_433752950141566985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' pivot='key' type='quantitative' />
            <column-instance column='[#AccidentHour]' derivation='None' name='[none:#AccidentHour:nk]' pivot='key' type='nominal' />
            <column-instance column='[#AccidentYear]' derivation='None' name='[none:#AccidentYear:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_433752950137769988]' derivation='Sum' name='[sum:Calculation_433752950137769988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141480968]' derivation='User' name='[usr:Calculation_433752950141480968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141566985]' derivation='User' name='[usr:Calculation_433752950141566985:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0whpcjx0myjclq1bfimjg059lfxa].[sum:Calculation_433752950137769988:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950141480968:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0whpcjx0myjclq1bfimjg059lfxa].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950141566985:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentYear:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2011&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2012&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2013&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2014&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2015&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2016&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2017&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2018&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2019&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2020&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2021&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2022&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2023&quot;' />
              <groupfilter function='member' level='[none:#AccidentYear:nk]' member='&quot;2024&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]</column>
            <column>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentYear:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentYear:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentYear:nk]</rows>
        <cols>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentHour:nk]</cols>
      </table>
      <simple-id uuid='{8617103A-4943-4C13-8973-77DDC705A521}' />
    </worksheet>
    <worksheet name='Road/Severity/YY'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output Extract' name='federated.0whpcjx0myjclq1bfimjg059lfxa' />
          </datasources>
          <datasource-dependencies datasource='federated.0whpcjx0myjclq1bfimjg059lfxa'>
            <column caption='AccidentHour text (copy)' datatype='string' name='[AccidentHour text (copy)_433752950137327619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[AccidentHour_text]' />
            </column>
            <column caption='AccidentHour text' datatype='string' name='[AccidentHour_text]' role='dimension' type='nominal' />
            <column caption='AccidentSeverityCategory en' datatype='string' name='[AccidentSeverityCategory_en]' role='dimension' type='nominal' />
            <column caption='Accident UID' datatype='string' name='[AccidentUID]' role='dimension' type='nominal' />
            <column caption='Angle' datatype='real' name='[Calculation_433752950137769988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(INT([AccidentHour text (copy)_433752950137327619]) - 1) * (2 * PI() / 24)' />
            </column>
            <column caption='Calculation1' datatype='integer' name='[Calculation_433752950141480968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Values' datatype='integer' name='[Calculation_433752950141566985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='X' datatype='real' name='[Calculation_433752950143270923]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Y' datatype='real' name='[Calculation_433752950143893516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='X1' datatype='real' name='[Calculation_433752950145294349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Y2' datatype='real' name='[Calculation_433752950146232334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[DateTime]' role='dimension' type='ordinal' />
            <column caption='RoadType en' datatype='string' name='[RoadType_en]' role='dimension' type='nominal' />
            <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AccidentSeverityCategory_en]' derivation='None' name='[none:AccidentSeverityCategory_en:nk]' pivot='key' type='nominal' />
            <column-instance column='[RoadType_en]' derivation='None' name='[none:RoadType_en:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_433752950137769988]' derivation='Sum' name='[sum:Calculation_433752950137769988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141480968]' derivation='User' name='[usr:Calculation_433752950141480968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141566985]' derivation='User' name='[usr:Calculation_433752950141566985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950143270923]' derivation='User' name='[usr:Calculation_433752950143270923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950143893516]' derivation='User' name='[usr:Calculation_433752950143893516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950145294349]' derivation='User' name='[usr:Calculation_433752950145294349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950146232334]' derivation='User' name='[usr:Calculation_433752950146232334:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DateTime]' derivation='Year' name='[yr:DateTime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentSeverityCategory_en:nk] / [federated.0whpcjx0myjclq1bfimjg059lfxa].[none:RoadType_en:nk])</rows>
        <cols>[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]</cols>
      </table>
      <simple-id uuid='{BB65BFFA-3750-4BA2-91B2-4A1DAF2D8BAB}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output Extract' name='federated.0whpcjx0myjclq1bfimjg059lfxa' />
          </datasources>
          <datasource-dependencies datasource='federated.0whpcjx0myjclq1bfimjg059lfxa'>
            <column caption='AccidentHour text (copy)' datatype='string' name='[AccidentHour text (copy)_433752950137327619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[AccidentHour_text]' />
            </column>
            <column caption='AccidentHour text' datatype='string' name='[AccidentHour_text]' role='dimension' type='nominal' />
            <column caption='Accident UID' datatype='string' name='[AccidentUID]' role='dimension' type='nominal' />
            <column caption='AccidentWeekDay en' datatype='string' name='[AccidentWeekDay_en]' role='dimension' type='nominal' />
            <column caption='Angle' datatype='real' name='[Calculation_433752950137769988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(INT([AccidentHour text (copy)_433752950137327619]) - 1) * (2 * PI() / 24)' />
            </column>
            <column caption='X' datatype='real' name='[Calculation_433752950143270923]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Y' datatype='real' name='[Calculation_433752950143893516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='X1' datatype='real' name='[Calculation_433752950145294349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Y2' datatype='real' name='[Calculation_433752950146232334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' role='measure' type='quantitative' />
            <column-instance column='[AccidentWeekDay_en]' derivation='None' name='[none:AccidentWeekDay_en:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_433752950143270923]' derivation='User' name='[usr:Calculation_433752950143270923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950143893516]' derivation='User' name='[usr:Calculation_433752950143893516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950145294349]' derivation='User' name='[usr:Calculation_433752950145294349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950146232334]' derivation='User' name='[usr:Calculation_433752950146232334:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950143270923:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950143270923:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950143270923:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950146232334:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950146232334:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950146232334:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentWeekDay_en:nk]' />
              <lod column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950143270923:qk]' />
              <lod column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950143893516:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950145294349:qk]</rows>
        <cols>[federated.0whpcjx0myjclq1bfimjg059lfxa].[usr:Calculation_433752950146232334:qk]</cols>
      </table>
      <simple-id uuid='{8C73A24D-F06D-4522-ABD0-D31C10FF0019}' />
    </worksheet>
    <worksheet name='Spiral'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output Extract' name='federated.0whpcjx0myjclq1bfimjg059lfxa' />
          </datasources>
          <datasource-dependencies datasource='federated.0whpcjx0myjclq1bfimjg059lfxa'>
            <column caption='AccidentHour text (copy)' datatype='string' name='[AccidentHour text (copy)_433752950137327619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[AccidentHour_text]' />
            </column>
            <column caption='AccidentHour text' datatype='string' name='[AccidentHour_text]' role='dimension' type='nominal' />
            <column caption='Accident UID' datatype='string' name='[AccidentUID]' role='dimension' type='nominal' />
            <column caption='AccidentWeekDay en' datatype='string' name='[AccidentWeekDay_en]' role='dimension' type='nominal' />
            <column caption='Angle' datatype='real' name='[Calculation_433752950137769988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(INT([AccidentHour text (copy)_433752950137327619]) - 1) * (2 * PI() / 24)' />
            </column>
            <column caption='Calculation1' datatype='integer' name='[Calculation_433752950141480968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Values' datatype='integer' name='[Calculation_433752950141566985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='X' datatype='real' name='[Calculation_433752950143270923]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Y' datatype='real' name='[Calculation_433752950143893516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='X1' datatype='real' name='[Calculation_433752950145294349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Y2' datatype='real' name='[Calculation_433752950146232334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AccidentHour_text]' derivation='None' name='[none:AccidentHour_text:nk]' pivot='key' type='nominal' />
            <column-instance column='[AccidentWeekDay_en]' derivation='None' name='[none:AccidentWeekDay_en:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_433752950137769988]' derivation='Sum' name='[sum:Calculation_433752950137769988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141480968]' derivation='User' name='[usr:Calculation_433752950141480968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141566985]' derivation='User' name='[usr:Calculation_433752950141566985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950143270923]' derivation='User' name='[usr:Calculation_433752950143270923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950143893516]' derivation='User' name='[usr:Calculation_433752950143893516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950145294349]' derivation='User' name='[usr:Calculation_433752950145294349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950146232334]' derivation='User' name='[usr:Calculation_433752950146232334:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentHour_text:nk]' />
              <text column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentWeekDay_en:nk] * [federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values])</rows>
        <cols>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentHour_text:nk]</cols>
      </table>
      <simple-id uuid='{32C4DAD7-1E75-478A-8BFB-948C1D942232}' />
    </worksheet>
    <worksheet name='TS Sankey'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output Extract' name='federated.0whpcjx0myjclq1bfimjg059lfxa' />
          </datasources>
          <datasource-dependencies datasource='federated.0whpcjx0myjclq1bfimjg059lfxa'>
            <column caption='AccidentHour text' datatype='string' name='[AccidentHour_text]' role='dimension' type='nominal' />
            <column caption='Accident Type' datatype='string' name='[AccidentType]' role='dimension' type='nominal' />
            <column caption='AccidentType en' datatype='string' name='[AccidentType_en]' role='dimension' type='nominal' />
            <column caption='Accident UID' datatype='string' name='[AccidentUID]' role='dimension' type='nominal' />
            <column caption='Date Time' datatype='datetime' name='[DateTime]' role='dimension' type='ordinal' />
            <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AccidentUID]' derivation='Attribute' name='[attr:AccidentUID:nk]' pivot='key' type='nominal' />
            <column-instance column='[DateTime]' derivation='CountD' name='[ctd:DateTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AccidentHour_text]' derivation='None' name='[none:AccidentHour_text:nk]' pivot='key' type='nominal' />
            <column-instance column='[AccidentType]' derivation='None' name='[none:AccidentType:nk]' pivot='key' type='nominal' />
            <column-instance column='[AccidentType_en]' derivation='None' name='[none:AccidentType_en:nk]' pivot='key' type='nominal' />
            <column-instance column='[DateTime]' derivation='Year' name='[yr:DateTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DateTime]' derivation='Year' name='[yr:DateTime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[ctd:DateTime:qk]' included-values='in-range'>
            <min>6</min>
            <max>984</max>
          </filter>
          <natural-sort column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType:nk]' direction='ASC' />
          <slices>
            <column>[federated.0whpcjx0myjclq1bfimjg059lfxa].[ctd:DateTime:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <_.fcp.VizExtensions.false...mark class='Automatic' />
            <_.fcp.VizExtensions.true...mark class='VizExtension' />
            <_.fcp.VizExtensions.true...add-in add-in-id='com.tableau.extension.sankey' extension-url='https://extensions.tableauusercontent.com/sandbox/sankey/sankey.html' extension-version='1.5.0' instance-id='F0CB861796814916B87843B2D83E865B'>
              <instance-settings />
              <type-settings>
                <worksheet />
              </type-settings>
            </_.fcp.VizExtensions.true...add-in>
            <encodings>
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{EEA1FFC2-5D11-4FB1-9E3C-0D5C674009B8}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{25AE5960-02E4-48CA-B895-AD305082B0E8}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:qk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{BC4FC063-D4D0-4D63-8783-3721E4244B3F}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentHour_text:nk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{35318F23-1BF6-4407-BEB0-B20E3D671E2F}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType:nk]' />
              <_.fcp.VizExtensions.false...lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{D333F0FE-D3B9-4E99-BF53-06E4493FFC00}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]' />
              <_.fcp.VizExtensions.true...custom _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{D333F0FE-D3B9-4E99-BF53-06E4493FFC00}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]' custom-type-name='level' />
              <_.fcp.VizExtensions.false...lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{E4CCB87D-3DE3-4C27-9566-0C94AF451231}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType_en:nk]' />
              <_.fcp.VizExtensions.true...custom _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{E4CCB87D-3DE3-4C27-9566-0C94AF451231}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType_en:nk]' custom-type-name='level' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{0B6F2CDE-FF70-4002-91B4-61132670A206}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType_en:nk]' />
              <tooltip _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{412F1C85-6A20-4A4D-B97C-CFB5A7C06CD0}' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[attr:AccidentUID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{EEFEA32F-7F7D-4EB1-BECF-E0BA45E21A17}' />
    </worksheet>
    <worksheet name='Type Datime'>
      <table>
        <view>
          <datasources>
            <datasource caption='Output Extract' name='federated.0whpcjx0myjclq1bfimjg059lfxa' />
          </datasources>
          <datasource-dependencies datasource='federated.0whpcjx0myjclq1bfimjg059lfxa'>
            <column caption='AccidentHour text (copy)' datatype='string' name='[AccidentHour text (copy)_433752950137327619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[AccidentHour_text]' />
            </column>
            <column caption='AccidentHour text' datatype='string' name='[AccidentHour_text]' role='dimension' type='nominal' />
            <column caption='AccidentType en' datatype='string' name='[AccidentType_en]' role='dimension' type='nominal' />
            <column caption='Accident UID' datatype='string' name='[AccidentUID]' role='dimension' type='nominal' />
            <column caption='Angle' datatype='real' name='[Calculation_433752950137769988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(INT([AccidentHour text (copy)_433752950137327619]) - 1) * (2 * PI() / 24)' />
            </column>
            <column caption='Calculation1' datatype='integer' name='[Calculation_433752950141480968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Values' datatype='integer' name='[Calculation_433752950141566985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='X' datatype='real' name='[Calculation_433752950143270923]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='Y' datatype='real' name='[Calculation_433752950143893516]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119])' />
            </column>
            <column caption='X1' datatype='real' name='[Calculation_433752950145294349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Y2' datatype='real' name='[Calculation_433752950146232334]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(AVG([Calculation_433752950137769988])) * COUNT([AccidentUID])' />
            </column>
            <column caption='Date Time' datatype='datetime' name='[DateTime]' role='dimension' type='ordinal' />
            <column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DateTime]' derivation='Day' name='[dy:DateTime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AccidentType_en]' derivation='None' name='[none:AccidentType_en:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_433752950137769988]' derivation='Sum' name='[sum:Calculation_433752950137769988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141480968]' derivation='User' name='[usr:Calculation_433752950141480968:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950141566985]' derivation='User' name='[usr:Calculation_433752950141566985:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950143270923]' derivation='User' name='[usr:Calculation_433752950143270923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950143893516]' derivation='User' name='[usr:Calculation_433752950143893516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950145294349]' derivation='User' name='[usr:Calculation_433752950145294349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_433752950146232334]' derivation='User' name='[usr:Calculation_433752950146232334:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0whpcjx0myjclq1bfimjg059lfxa].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-orientation' data-class='total' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' value='0' />
            <format attr='color' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' value='#f28e2b' />
            <format attr='text-orientation' field='[federated.0whpcjx0myjclq1bfimjg059lfxa].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0whpcjx0myjclq1bfimjg059lfxa].[__tableau_internal_object_id__].[cnt:Extract (Extract.Extract)_FC0E78CB970244FA9DEFBE118DF29119:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]</rows>
        <cols>([federated.0whpcjx0myjclq1bfimjg059lfxa].[dy:DateTime:ok] / [federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType_en:nk])</cols>
      </table>
      <simple-id uuid='{44A08858-615A-43BE-A36D-1755CB5FF813}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='TS Sankey'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentHour_text:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentUID:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:DateTime:qk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:RoadType:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:RoadType_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F476448-1A3F-49C8-8801-E18D4BD93A7E}' />
    </window>
    <window class='worksheet' name='HeatMap/hh/yy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[attr:AccidentType:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentHour:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentMonth:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentYear:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentSeverityCategory_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:Is Duplicate Row?:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30AE39E3-3491-409D-B381-1344DCCDCF07}' />
    </window>
    <window class='worksheet' name='Type Datime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0whpcjx0myjclq1bfimjg059lfxa].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentYear:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentType_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13EB78E4-ED8C-486E-A82B-B40870243BB3}' />
    </window>
    <window class='worksheet' name='Road/Severity/YY'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentWeekDay_en – 1:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:#AccidentYear:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentInvolvingBicycle:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentSeverityCategory_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:RoadType_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{127ECC56-E9D9-4539-A503-A06FAF8522B2}' />
    </window>
    <window class='worksheet' name='Spiral'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentHour_text:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentHour_text:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentWeekDay_en:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[yr:DateTime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4CD0A2FD-D9EC-4B5C-AB75-E09E13237D2F}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentWeekDay_en:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentHour_text:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentUID:nk]</field>
            <field>[federated.0whpcjx0myjclq1bfimjg059lfxa].[none:AccidentWeekDay_en:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{417D11F8-6D92-4E94-AC50-37C8ACE89730}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='HeatMap/hh/yy' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Road/Severity/YY' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAExklEQVR4nO3dS49URRgG4O/0dIOCAiNB8RIhcokhLogLjdG1Cxf+S3+EbsANCxMSEgMk
      2iKzYRhuI5egwJlTLgSi0AamqxlSfM+zmeQs6vQQ3jnnraqp6UopJSCp0cv+APAyVQdgY2Nj
      EZ8DNq3v++oxPAFo1jAM1WMIAM1aRH0VAJq1tLRUPYYAkJoAkJoA0KxFzEAKAM3quq56DAGg
      WaNR/X9fASA1AaBZ1gFIzUowqSnBpKYEQyUBoFlKMKkpwaSmA5CaWSCoJAA0SwkmNSWY1JRg
      UlOCoZIA0CwdgNTMApGaEkxqSjBUEgCapQSTmhJMag7HhUoCQGoCQLMcjktq1gFIzUowVBIA
      mmUdgNSsBJOaEkxqSjBUEgCapQSTmhJMajoAqZkFgkoCQLOUYFJTgklNCSY1JRgqCQDN0gFI
      zSwQqSnBpKYEQyUBoFlKMKkpwaTmcFyoJACkJgA0y+G4pGYdgNSsBEMlASA1AaBZSjCpKcGk
      pgRDJQGgWTbDkZrt0KSmBJOaEgyVBIBmKcGkpgSTmg5AamaBoJIA0Kwt6QDT6bT6JvAiLGIW
      aDzr4oUzJ+O778/E/rd2xsb2PXH48OGHdxxi5cI0tu3aF+/uW66+OdRYRAnuyowY3bl5I+4+
      GMW+vbvj1+k0jh45EhERf968Equ3Iu7duhpHjx2LUfzzSwlPHlBUSnmqoNRce1Jr47+K39Pz
      eNH37Ps+xuNxdF0382nwPOPOfAIMG338dPKHmF7r49tvvn58vRuNYhgexKN7DcMQpZTo+/4/
      gw7DEF3XPXXt34ktpUQp5ZnX/m+sZ1173vFr7/kqfU9b9W+2qHv2fR8REZPJJPq+n+szzQzA
      H9cux/6PP4/Plpfi3Mql+OjD9yIi4rU39saO9Yux54MDsdR1EQ9/8i/iiDrYrFJKTCaTiIjH
      Xzdr5ivQZsx6BYKt8OgVqIZpUFITAJplMxyp2QxHajbDkZrNcFBJAGiWDkBqZoFITQkmNSUY
      KgkAzVKCSU0JJjV/KR4qCQCpCQDN8kfySM06AKlZCYZKAkCzrAOQmpVgUlOCSU0JhkoCQLOU
      YFJTgklNByA1s0BQSQBolhJMakowqSnBpKYEQyUBoFk6AKmZBSI1JZjUlGCoJAA0SwkmNSWY
      1ByOC5UEgNQEgGY5HJfUrAOQmpVgqCQApCYANEsJJjUlmNSUYKgkADTLZjhSsx2a1JRgUlOC
      oZIA0CwlmNSUYFLTAUjNLBBUEgCapQOQmlkgUlOCSU0JhkoCQLOUYFJTgknN4bhQSQBITQBo
      lhIMlQSAZlkJhkoCQGoCQLMcjktqNsORmhIMlca1A5RSFvIuBpvV9331a1B1AMbj6iFgbrUb
      4rwC0SwdgNQWMQvk/YUmXb+0EhfXbsSu5bfjyMH35x7HE4AmXb/9V3x6/HgM9+5UjSMANGnP
      jkmcPX8+YryjapyuLOIXK2GrlRL37t+PybZtMaroAgJAal6BSE0ASE0AaEyJy5fXIsr9uHLl
      evz+y/lYu7o+92gCQHPOnT4VP544EWu378Z453Ksr/4891gCQGO6+PKrL+Lcynp8cvCdOHv6
      VIx3H5p7NAGgOdtffzOOHjoQ66u/xdqdiIj5JzJNg5KaJwCp/Q1ehVeO4TCRPQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Spiral' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TS Sankey' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Type Datime' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <_.fcp.VizExtensions.true...referenced-extensions>
    <_.fcp.VizExtensions.true...referenced-extension>
      <manifest manifest-version='0.1'>
        <worksheet-extension extension-version='1.5.0' id='com.tableau.extension.sankey'>
          <default-locale>en_US</default-locale>
          <name resource-id='name' />
          <description>Visualisation of flows between nodes (levels) with proportionally sized edges.</description>
          <author email='github@tableau.com' name='tableau' organization='tableau' website='https://www.tableau.com' />
          <min-api-version>1.11</min-api-version>
          <source-location>
            <url>https://extensions.tableauusercontent.com/sandbox/sankey/sankey.html</url>
          </source-location>
          <icon />
          <context-menu>
            <configure-context-menu-item />
          </context-menu>
          <encoding id='level'>
            <display-name resource-id='level-id'>Level</display-name>
            <role-spec>
              <role-type>discrete-dimension</role-type>
              <role-type>discrete-measure</role-type>
            </role-spec>
            <fields max-count='5' />
            <encoding-icon token='level' />
            <tooltip resource-id='level-id'>Level</tooltip>
          </encoding>
          <encoding id='edge'>
            <display-name resource-id='edge-id'>Link</display-name>
            <role-spec>
              <role-type>continuous-dimension</role-type>
              <role-type>continuous-measure</role-type>
            </role-spec>
            <fields max-count='1' />
            <encoding-icon token='edge' />
            <tooltip resource-id='edge-id'>Edge</tooltip>
          </encoding>
        </worksheet-extension>
        <resources>
          <resource id='edge-id'>
            <text locale='de_DE'>Verbindungen</text>
            <text locale='en_GB'>Link</text>
            <text locale='en_US'>Link</text>
            <text locale='es_ES'>Vínculos</text>
            <text locale='fr_CA'>Lien</text>
            <text locale='fr_FR'>Lien</text>
            <text locale='it_IT'>Collegamento</text>
            <text locale='ja_JP'>リンク</text>
            <text locale='ko_KR'>링크</text>
            <text locale='pt_BR'>Elos</text>
            <text locale='sv_SE'>länkar</text>
            <text locale='th_TH'>ลิงก์</text>
            <text locale='zh_CN'>链接</text>
            <text locale='zh_TW'>連結</text>
          </resource>
          <resource id='level-id'>
            <text locale='de_DE'>Ebene</text>
            <text locale='en_GB'>Level</text>
            <text locale='en_US'>Level</text>
            <text locale='es_ES'>nivel</text>
            <text locale='fr_CA'>niveau</text>
            <text locale='fr_FR'>niveau</text>
            <text locale='it_IT'>livello</text>
            <text locale='ja_JP'>レベル</text>
            <text locale='ko_KR'>레벨</text>
            <text locale='pt_BR'>nível</text>
            <text locale='sv_SE'>nivå</text>
            <text locale='th_TH'>ระดับ</text>
            <text locale='zh_CN'>级别</text>
            <text locale='zh_TW'>級別</text>
          </resource>
          <resource id='name'>
            <text locale='en_US'>Sankey</text>
            <text locale='ja_JP'>サンキー</text>
            <text locale='zh_CN'>桑基图</text>
          </resource>
        </resources>
      </manifest>
      <referenced-views>
        <referenced-view instances='1' viewId='TS Sankey' />
      </referenced-views>
    </_.fcp.VizExtensions.true...referenced-extension>
  </_.fcp.VizExtensions.true...referenced-extensions>
</workbook>
